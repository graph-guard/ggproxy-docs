import{_ as e,o as r,c as a,a as t}from"./app.12aff8b1.js";const o="/assets/ggproxy_proxy_visualization.93c10869.svg",_=JSON.parse('{"title":"GraphGuard Proxy","description":"","frontmatter":{},"headers":[{"level":2,"title":"Community","slug":"community"}],"relativePath":"index.md"}'),i={name:"index.md"},s=t('<h1 id="graphguard-proxy" tabindex="-1">GraphGuard Proxy <a class="header-anchor" href="#graphguard-proxy" aria-hidden="true">#</a></h1><p>GraphGuard Proxy (a.k.a. &quot;ggproxy&quot;) is a high-performance <a href="https://graphql.org" target="_blank" rel="noreferrer">GraphQL</a> proxy protecting your GraphQL server from <a href="/faq#what-problem-does-ggproxy-solve">maliciously-complex queries</a> using a query template whitelist. &quot;ggproxy&quot; sits between the internet and your GraphQL server and allows you to define a whitelist of explicitly allowed queries, mutations and subscriptions while blocking any GraphQL requests that don&#39;t match against it.</p><p><img src="'+o+'" alt="GraphGuard Proxy Illustration"></p><p>The template whitelist is defined using the <a href="/gqt">GraphQL Template Language (GQT)</a>.</p><p>A single GraphGuard Proxy instance can host multiple services, each having its own whitelist and forwarding parameters.</p><p>GraphGuard Proxy is commercial closed source software, but it will always remain free for non-commercial open source projects \u2764\uFE0F</p><h2 id="community" tabindex="-1">Community <a class="header-anchor" href="#community" aria-hidden="true">#</a></h2><p>Join our community:</p><ul><li><a href="https://t.me/graphguard" target="_blank" rel="noreferrer">Telegram</a></li><li><a href="https://discord.gg/PmWpQcE4KM" target="_blank" rel="noreferrer">Discord</a></li><li><a href="https://github.com/graph-guard/ggproxy-docs/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a></li></ul><p>Please, feel free to contact us directly at <a href="mailto:support@graphguard.io" target="_blank" rel="noreferrer">support@graphguard.io</a>.</p>',10),n=[s];function p(l,h,c,u,d,g){return r(),a("div",null,n)}const f=e(i,[["render",p]]);export{_ as __pageData,f as default};
